
plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    signingConfigs {
        config {
            keyAlias = keystoreProperties["keyAlias"]
            keyPassword = keystoreProperties["keyPassword"]
            storeFile = file(keystoreProperties["storeFile"])
            storePassword = keystoreProperties["storePassword"]
        }
    }
    compileSdkVersion 31
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.acePlus.codeTest"
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {

        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "SERVER_ENDPOINT", "\"${local_server_endpoint}\"")
            signingConfig signingConfigs.config
        }

        local {
            debuggable true
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "SERVER_ENDPOINT", "\"${local_server_endpoint}\"")
            signingConfig signingConfigs.config
        }

        staging {
            debuggable true
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "SERVER_ENDPOINT", "\"${staging_server_endpoint}\"")
            signingConfig signingConfigs.config
        }

        production {
            debuggable true
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "SERVER_ENDPOINT", "\"${production_server_endpoint}\"")
            signingConfig signingConfigs.config
        }
    }

    buildFeatures {
        dataBinding = true
        viewBinding = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation fileTree(dir: "libs", include: ["*.jar"])
    //noinspection GradleDependency
    implementation "com.google.android.material:material:$android_material"
    //noinspection GradleDependency
    implementation "androidx.core:core-ktx:$core_ktx"
    implementation "androidx.appcompat:appcompat:$appcompact"
    //noinspection GradleDependency
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout"

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    //noinspection GradleDependency
    testImplementation "junit:junit:$junit"
    androidTestImplementation "androidx.test.ext:junit:$test_junit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core"

    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$viewmodel_ktx"
    implementation "androidx.lifecycle:lifecycle-extensions:$viewmodel_ktx"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"

    implementation "com.squareup.okhttp3:logging-interceptor:$interceptor"
    implementation "com.squareup.moshi:moshi:$moshi"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_kotlin"
    implementation "com.google.code.gson:gson:$gson"

    //noinspection GradleDependency
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_core"
    //noinspection GradleDependency
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_android"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$coroutines_adapter"

    //noinspection GradleDependency
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_viewmodels"
    kapt "androidx.hilt:hilt-compiler:$hilt_viewmodels"

    //noinspection LifecycleAnnotationProcessorWithJava8
    kapt "android.arch.lifecycle:compiler:$arch"
    implementation "android.arch.lifecycle:extensions:$arch"

    // For local unit tests
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptTest "com.google.dagger:hilt-android-compiler:$hilt_version"

    //WindowManager
    implementation 'androidx.window:window:1.0.0-alpha06'

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'

    //loading animation
    implementation "com.github.ybq:Android-SpinKit:$spinKit_version"

}